body, html{
  min-height: 100%;
}

body, main{
  height: 100vh
}

a{
  cursor: pointer !important;
}


.fs-7{
  font-size: 1rem;
}

[x-cloak] {
  display: none !important;
}


.loading {
    display: none;
    opacity: 0;
    transition: opacity 500ms ease-in;
}

.htmx-request {
    .loading {
            display: block;
            opacity: 1;
        }

    .save-text{
        display: none;
    }
}

.tiny{
    font-size: 0.7rem;
}


.vertical-center-row td {
    vertical-align: middle;
}


.corsivo{
 @extend .lobster-regular;
 font-size: 150%;
 color: rgba(var(--bs-primary-rgb));

}

.lobster-regular {
    font-family: "Lobster", sans-serif;
    font-weight: 400;
    font-style: normal;
}


.bingo-table{

    // Locally scoped variables
        --gap: 0.2rem;
        --line-offset: calc(var(--gap) / 2);
        --line-thickness: 2px;
        --line-color: rgba(var(--bs-primary-rgb));

        // Grid layout (Can be anything)
        display: grid;
        grid-template-columns: repeat(3, minmax(0, 1fr));
        overflow: hidden;
        gap: var(--gap);
        border: var(--line-thickness) solid var(--line-color);

    display: grid;
        grid-template-columns: repeat(auto-fill, minmax(8em, 1fr));

        @media screen and (max-width: 768px) {
            grid-template-columns: repeat(auto-fill, minmax(40%, 1fr));
        }



        grid-auto-rows: 1fr;
    & .challenge{
        aspect-ratio: 1;
        margin: 0;
        padding: 0;
        a{
            text-align: center;
        }

        i{
            position: absolute;
            top: 0.1rem;
            right: 0.2rem;
        }

        position: relative;
        @extend .corsivo;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: stretch;


        &::before, &::after{
            content: '';
                position: absolute;
                background-color: var(--line-color);

        }

        &::before{
            inline-size: var(--line-thickness);
                block-size: 100vh;
                inset-inline-start: calc(var(--line-offset) * -1);
        }

        &::after{
            inline-size: 100vw;
                block-size: var(--line-thickness);
                inset-inline-start: 0;
                inset-block-start: calc(var(--line-offset) * -1);
        }
    }

}

.challenge-done{
    background-color: rgba(var(--bs-primary-rgb));
    color: white !important;
}
